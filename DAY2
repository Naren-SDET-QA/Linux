# Day 2: Introduction to Linux  

## 1. What is Linux?  
Linux is an **open-source operating system** based on Unix, widely used for servers, cloud computing, and embedded systems.

### Key Features:  
‚úî **Operating System:** Manages hardware and software resources.  
‚úî **Open Source:** Free to use, modify, and distribute.  
‚úî **Developed in 1991** by **Linus Torvalds**.  
‚úî **Multi-User & Multi-Tasking:** Supports multiple users and processes simultaneously.  
‚úî **Case Sensitive:** Treats uppercase and lowercase differently (`File.txt` ‚â† `file.txt`).

---

## 2. Linux Distributions (Flavors)  
A **distribution (distro)** is a customized version of Linux that includes the OS, package management, and additional tools.

| **Distro**   | **Use Case**                                      |
|-------------|--------------------------------------------------|
| **RedHat**  | Enterprise-grade, commercial support (RHEL)      |
| **Ubuntu**  | User-friendly, widely used for desktops/servers  |
| **CentOS**  | Community-supported version of RedHat           |
| **Debian**  | Stable, known for reliability                   |
| **SUSE Linux** | Enterprise use, strong in SAP environments  |

Other distros: Fedora, Arch Linux, Kali Linux (for penetration testing), etc.

---

## 3. Linux Directory Structure  
Linux follows a hierarchical directory structure where everything starts from **`/` (root directory)**.


## üìå Linux File System Diagram
![Linux Directory Structure](https://media.geeksforgeeks.org/wp-content/uploads/20210501124411/dir.png)




### **Key Directories Explained**
- **`/` (Root Directory):** The top-most directory that contains all files and subdirectories.  
- **`/bin`** - Essential binary executables (commands) like `ls`, `cp`, `mv`.  
- **`/sbin`** - System binaries used for system administration (e.g., `reboot`, `fdisk`).  
- **`/etc`** - System and application configuration files (e.g., `/etc/passwd` for user details).  
- **`/home`** - User home directories (`/home/user1`, `/home/user2`). Each user stores personal files here.  
- **`/dev`** - Represents hardware devices as files (e.g., `/dev/sda` for hard drives).  
- **`/root`** - Home directory for the **root (admin)** user.  
- **`/opt`** - Optional software packages installed manually.  
- **`/lib`** - Shared libraries required by system binaries (`/bin`, `/sbin`).  
- **`/proc`** - A virtual filesystem that provides system information (`/proc/cpuinfo`).  
- **`/tmp`** - Temporary file storage, often cleared on reboot.  

---

# üìå Linux Interview Questions (IQ)

## üîπ 1. What is the difference between `/bin` and `/sbin`?

### üìå `/bin` (Binary Executables)
- Contains **basic commands** that are **available to all users**.
- These commands are essential for basic system operations.
- Located in **`/bin`**, meaning they can be executed without requiring superuser privileges.

**‚úÖ Examples:**
- `ls` - List directory contents.
- `cat` - View file contents.
- `cp` - Copy files.
- `mv` - Move or rename files.
- `rm` - Remove files.

### üìå `/sbin` (System Binaries)
- Contains **system administration commands**, primarily used by the **root user**.
- These commands are used for system maintenance and management.
- Located in **`/sbin`**, requiring **root privileges** (`sudo`) for execution.

**‚úÖ Examples:**
- `shutdown` - Power off the system.
- `reboot` - Restart the system.
- `ifconfig` - Configure network interfaces.
- `mount` - Mount filesystems.
- `fsck` - File system consistency check.

---

## üîπ 2. In which directory are all external software packages installed?

### üìå Answer: **`/opt`**  
- The **`/opt`** directory is used to store **optional (third-party) software**.
- This includes **software not part of the default Linux distribution**.
- Typically used for **commercial software, large applications, or manually installed packages**.

**‚úÖ Examples of software stored in `/opt`:**
- Google Chrome (`/opt/google/chrome`)
- VirtualBox (`/opt/VirtualBox`)
- Custom enterprise applications

**üí° Why `/opt`?**
- Keeps the system clean by separating **non-default software** from system files.
- Avoids conflicts with **default Linux package manager installations (`/usr/bin`, `/usr/sbin`)**.
- Easier to manage, upgrade, and remove third-party applications.

---

### üìå Summary
| **Directory** | **Purpose** | **Access Level** | **Examples** |
|--------------|------------|----------------|-------------|
| `/bin` | Essential user commands | All users | `ls`, `cp`, `mv`, `rm` |
| `/sbin` | System administration commands | Root user (sudo required) | `shutdown`, `reboot`, `mount` |
| `/opt` | External software packages | Varies (depends on software) | Google Chrome, VirtualBox |

---




# üìå Linux Commands Guide  

## üîπ What is a Command?
A **command** in Linux is a specific instruction given to the operating system to perform a task.

## üîπ What is a Program?
A **program** is a collection of instructions that execute a specific task when run.

---

## üñ•Ô∏è 1. `clear` (Clear Terminal Screen)
### **Description:**
- The `clear` command is used to **clear the terminal screen**.
- It removes all previous output, giving you a **clean workspace**.

### **Usage:**
```bash
clear
```

---

## üñ•Ô∏è 2. `uname` (System Information)
### **Description:**
- The `uname` command displays **system information** such as OS, kernel version, and architecture.

### **Usage:**
```bash
uname        # Displays system name
uname -a     # Shows all system details
uname -r     # Shows kernel version
uname -m     # Shows hardware architecture
```

---

## üñ•Ô∏è 3. `man` (Manual Pages)
### **Description:**
- The `man` command is used to **view the manual pages** for Linux commands and programs.

### **Usage:**
```bash
man command_name    # Display manual for any command
man -f grep         # Show a short description of the grep command
man ls              # Show manual for 'ls' command
```

---

## üñ•Ô∏è 4. `whoami` (Current User)
### **Description:**
- The `whoami` command displays the **currently logged-in username**.
- Useful for checking your user identity, especially in **multi-user environments**.

### **Usage:**
```bash
whoami
```

---

## üñ•Ô∏è 5. `pwd` (Print Working Directory)
### **Description:**
- The `pwd` command shows the **current directory path**.
- Useful when navigating through the Linux filesystem.

### **Usage:**
```bash
pwd
```

---

## üñ•Ô∏è 6. `history` (Command History)
### **Description:**
- The `history` command displays a **list of previously executed commands** in the terminal.
- Helps in recalling past commands and debugging.

### **Usage:**
```bash
history         # Display all history
history -c      # Clear entire command history
history N       # Show last N commands
history | grep <command>  # Search history for a specific command
!!              # Re-run the last executed command
!<line_number>  # Run a specific command from history by line number
!<string>       # Run the most recent command that starts with <string>
history -d 500  # Delete the command at history line number 500
```

---

## üñ•Ô∏è 7. `sudo su -` (Switch to Root User)
### **Description:**
- The `sudo su -` command allows you to **switch to the root user** for administrative tasks.

### **Usage:**
```bash
sudo su -    # Switch to root user
exit         # Return to normal user (e.g., ec2-user)
```

---

## üñ•Ô∏è 8. `who` (Check Logged-in Users)
### **Description:**
- Displays users currently logged into the system along with login details.

### **Usage:**
```bash
who
```

---

## üñ•Ô∏è 9. `mkdir` (Create Directory)
### **Description:**
- The `mkdir` command is used to **create new directories**.

### **Usage:**
```bash
mkdir four              # Create a directory named 'four'
mkdir -v five           # Create 'five' with verbose output
mkdir one two three     # Create multiple directories
mkdir one/two/three     # Error: 'two' does not exist
mkdir -p one/two/three # Create parent directories automatically
mkdir "kk funda"        # Create a directory with spaces in name
mkdir -m 755 public     # Create 'public' with specific permissions
```

---

## üñ•Ô∏è 10. `cd` (Change Directory)
### **Description:**
- The `cd` command is used to **navigate between directories**.

### **Usage:**
```bash
cd Documents          # Move to 'Documents' directory
cd /                 # Move to root directory
cd one/two/three     # Navigate through nested directories
cd ../home           # Move one level up and go to 'home'
cd ../..            # Move two levels up
cd or cd ~          # Move to the home directory
cd -                # Switch between current and previous directories
```

---

## üñ•Ô∏è 11. `rmdir` (Remove Empty Directory)
### **Description:**
- Removes an **empty** directory.

### **Usage:**
```bash
rmdir test  # Deletes an empty directory named 'test'
```

---

## üñ•Ô∏è 12. `rm` (Remove Files & Directories)
### **Description:**
- The `rm` command removes files and directories, whether empty or not.

### **Usage:**
```bash
rm file_name          # Delete a file
rm -rf directory_name # Delete a directory and its contents forcefully
```

---

## üñ•Ô∏è 13. `touch` (Create Empty Files)
### **Description:**
- The `touch` command creates **empty files** or updates timestamps of existing files.

### **Usage:**
```bash
touch demo.txt       # Create an empty file named 'demo.txt'
touch one two three  # Create multiple empty files
```

---

## üîπ Summary of Important Commands

| **Command**  | **Description** |
|-------------|----------------|
| `clear` | Clears the terminal screen. |
| `uname` | Displays system information. |
| `man` | Opens the manual page for commands. |
| `whoami` | Shows the currently logged-in user. |
| `pwd` | Displays the present working directory. |
| `history` | Shows a list of previously entered commands. |
| `sudo su -` | Switches to root user. |
| `mkdir` | Creates directories. |
| `cd` | Changes directories. |
| `rm` | Deletes files and directories. |
| `touch` | Creates empty files. |




